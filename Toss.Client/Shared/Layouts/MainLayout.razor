@using Toss.Client.Pages.Home
@inject IExceptionNotificationService exceptionNotificationService;
@inject IHttpApiClientRequestBuilderFactory Http;
@inject NavigationManager navigationManager;
@implements IDisposable;
@inject IMessageService messageService;
<div class="pure-g">
    <div class="top-menu pure-menu pure-u-5-5 pure-menu-horizontal pure-menu-scrollable">
        <a href="#" class="pure-menu-link pure-menu-heading">Toss</a>
        <ul class="pure-menu-list">

            <AuthorizeView>
                <Authorized>
                    <li class="pure-menu-item">
                        <NavLink href="/account" class="pure-menu-link" id="LinkAccount">
                            <Icon Title="Account" IconType="person"></Icon>
                        </NavLink>
                    </li>
                </Authorized>
                <NotAuthorized>
                    <li class="pure-menu-item">
                        <NavLink href="/login" class="pure-menu-link" id="LinkLogin">
                            Login
                        </NavLink>
                    </li>
                </NotAuthorized>
            </AuthorizeView>
            <li class="pure-menu-item">
                <NavLink href="/new" class="pure-menu-link" id="LinkNewToss">
                    <Icon Title="New Toss" IconType="edit"></Icon>
                </NavLink>
            </li>
            <AuthorizeView>
                <Authorized>
                    <UserHashtag></UserHashtag>
                </Authorized>
            </AuthorizeView>
            <li class="pure-menu-item">
                <div class="pure-form">
                    <EditForm OnValidSubmit="SeeHashtag" Model="@addHashtagCommand">
                        <MyInput Placeholder="Tag" Type="text" Id="TxtAddHashTag" @bind-Value="@addHashtagCommand.NewHashTag" />
                    </EditForm>
                </div>
            </li>
        </ul>
    </div>
</div>
<Message />
<div class="main">
    @Body
</div>
@code {

    [Parameter] public RenderFragment Body { get; set; }


    AddHashtagCommand addHashtagCommand = new AddHashtagCommand();

    protected override void OnInitialized()
    {
        this.exceptionNotificationService.OnException += HandleExceptions;
        base.OnInitialized();
    }

    private void HandleExceptions(object sender, string s)
    {
        messageService.Error(s);
    }
    public void Dispose()
    {

        this.exceptionNotificationService.OnException -= HandleExceptions;
    }
    protected void SeeHashtag()
    {
        navigationManager.NavigateTo("/tag/" + addHashtagCommand.NewHashTag);
    }
}
