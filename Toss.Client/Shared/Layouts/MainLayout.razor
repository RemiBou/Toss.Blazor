@inject IExceptionNotificationService exceptionNotificationService;
@inject IAccountService accountService;
@inject IHttpApiClientRequestBuilderFactory ClientFactory;
@inject IUriHelper urlHelper;
@implements IDisposable;
@inject IMessageService messageService;
<div class="pure-g">
    <div class="top-menu pure-menu pure-u-5-5 pure-menu-horizontal pure-menu-scrollable">
        <a href="#" class="pure-menu-link pure-menu-heading">Toss</a>
        <ul class="pure-menu-list">
            @if (_account != null)
            {
                <li class="pure-menu-item">
                    <NavLink href="/settings" class="pure-menu-link" id="BtnMenu">
                        Setting
                    </NavLink>
                </li>

            }
            else
            {
                <li class="pure-menu-item">
                    <NavLink href="/login" class="pure-menu-link" id="BtnMenu">
                        Login
                    </NavLink>
                </li>
            }
            <li class="pure-menu-item">
                <NavLink href="/new" class="pure-menu-link" id="BtnOpenNewToss">
                    New Toss
                </NavLink>
            </li>
            @if (_account != null)
            {
                @foreach (var hashTag in _account.Hashtags ?? new List<string>())
                {
                    <li class="pure-menu-item">
                        <NavLink href=@("/tag/"+hashTag) Match="NavLinkMatch.All" class="pure-menu-link">
                            #@hashTag
                        </NavLink>
                    </li>
                }
            }
            <li class="pure-menu-item">
                <div class="pure-form">
                    <EditForm OnValidSubmit="SeeHashtag" Model="@addHashtagCommand">
                        <MyInput Placeholder="Tag" Type="text" Id="TxtAddHashTag" bind-Value="@addHashtagCommand.NewHashTag" />
                    </EditForm>
                </div>
            </li>
        </ul>
    </div>
</div>
<Message />
<div class="main">
    @Body
</div>
@functions {

    [Parameter]
    RenderFragment Body { get; set; }


    AddHashtagCommand addHashtagCommand = new AddHashtagCommand();

    private AccountViewModel _account;
    protected override void OnInit()
    {
        this.exceptionNotificationService.OnException += HandleExceptions;
        this.accountService.SubscribeOnCurrentAccountChanged(this.OnAccountChanged);
        base.OnInit();
    }

    private void OnAccountChanged(object sender, AccountViewModel account)
    {
        this._account = account;
        this.StateHasChanged();
    }
    private void HandleExceptions(object sender, string s)
    {
        messageService.Error(s);
    }
    public void Dispose()
    {

        this.exceptionNotificationService.OnException -= HandleExceptions;
    }
    protected void SeeHashtag()
    {
        urlHelper.NavigateTo("/tag/" + addHashtagCommand.NewHashTag);
    }
}
