@inject ApiAuthenticationStateProvider AuthenticationStateProvider;
@implements IDisposable
@if (_account != null)
{
    @foreach (var hashTag in _account.Hashtags ?? new List<string>())
    {
        <li class="pure-menu-item">
            <NavLink href=@("/tag/"+hashTag) Match="NavLinkMatch.All" class="pure-menu-link  tag-link">
                #@hashTag
            </NavLink>
        </li>
    }
}
@code {
    private AccountViewModel _account;

    protected override void OnInitialized()
    {
        _account = AuthenticationStateProvider.Account;
        AuthenticationStateProvider.AuthenticationStateChanged += RefreshAccount;


    }
    private void RefreshAccount(Task<AuthenticationState> newAuthStateTask)
    {

        _account = AuthenticationStateProvider.Account;
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        AuthenticationStateProvider.AuthenticationStateChanged -= RefreshAccount;
    }
}
