@inject IHttpApiClientRequestBuilderFactory ClientFactory
@if (sponsoredToss != null)
{

    <OneToss toss="@sponsoredToss" isAdverstisment="true"></OneToss>
}
@functions{
    TossLastQueryItem sponsoredToss;

    [Parameter]
    private string tag { get; set; } = "";

    protected override async Task OnParametersSetAsync()
    {
        await RefreshSponsoredToss();
    } 

    protected async Task RefreshSponsoredToss()
    {
        sponsoredToss = null;
        if (string.IsNullOrWhiteSpace(tag))
        {
            return;
        }
        await ClientFactory.Create("/api/toss/sponsored?hashtag=" + tag)
            .OnOK<TossLastQueryItem>(l =>
           {
                sponsoredToss = l;
                StateHasChanged();
            })
            .Get();
    }
}
