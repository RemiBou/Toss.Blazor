@page "/about"
@using System.Web
@inject HttpClient httpClient
@inject IMarkdownService markdown
<h1>About Toss</h1>
<div class="row">
    @foreach (var toss in AboutItems)
    {    
        <div class="col-md-3 col-sm-6 my-2 toss">        
            <div class="card  h-100" data-toggle="modal" data-target="#modal-@toss.Id" style="cursor:zoom-in">           
                
                <div class="card-body p-2">
                    <p class="card-text" style="max-height:200px;overflow-y: hidden;">
                       @markdown.ToHtml(toss.Content)
                    </p>                
                </div>
            </div>
        </div>
        <div class="modal fade" tabindex="-1" role="dialog" id="modal-@toss.Id" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-body">
                          @markdown.ToHtml(toss.Content)
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@functions{
    HashSet<TossLastQueryItem> AboutItems = new HashSet<TossLastQueryItem>();

    protected override async Task OnInitAsync()
    {
        //we get the about content directly from github so it doesnt use our bandwidth and is up to date
        var content = await httpClient.GetStringAsync("https://raw.githubusercontent.com/RemiBou/Toss.Blazor/master/ABOUT.md");

        AboutItems = new HashSet<TossLastQueryItem>(
            content.Split(new[] {$"{Environment.NewLine}{Environment.NewLine}"}, StringSplitOptions.None)
                .Select(block => new TossLastQueryItem {Id = AboutItems.Count.ToString(), Content = block}));
    }
}